{"version":3,"file":"bff.cjs.js","sources":["../src/environment.ts","../src/constants/tunnel.ts","../src/config/bff.config.ts","../src/config/app.config.ts","../src/server/helpers/configurer.ts","../src/server/getters/archive.ts","../src/server/getters/rss.ts","../src/server/getters/sitemap.ts","../src/transforms/gtag.ts","../src/server/getters/gtag.ts","../src/server/getters/wallpaper.ts","../src/server/getters/my-google-map.ts","../src/config/bff.argv.ts","../src/server/getters/github.ts","../src/server/getters/twitter.ts","../src/server/getters/instagram.ts","../src/server/getters/youtube.ts","../src/server/getters/open-srouce.ts","../src/server/getters/opensea.ts","../src/server/getters/douban.ts","../src/server/getters/netease-music.ts","../src/server/renderer/template.ts","../src/server/renderer/dev.ts","../src/server/renderer/prod.ts","../src/constants/error.ts","../src/server/helpers/responsor.ts","../src/server/helpers/cacher.ts","../src/constants/proxy.ts","../src/server/proxy.ts","../src/server/cache.ts","../src/server/index.ts","../src/bff.ts"],"sourcesContent":["/**\n * @file Dev environment\n * @module environment\n * @author Surmon <https://github.com/surmon-china>\n */\n\nexport enum NodeEnv {\n  Development = 'development',\n  Production = 'production',\n  Test = 'test'\n}\n\nexport const NODE_ENV = process.env.NODE_ENV as NodeEnv\nexport const isDev = process.env.NODE_ENV === NodeEnv.Development\nexport const isProd = process.env.NODE_ENV === NodeEnv.Production\nexport const isTest = process.env.NODE_ENV === NodeEnv.Test\n","/**\n * @file Tunnel constant\n * @module constant.tunnel\n * @author Surmon <https://github.com/surmon-china>\n */\n\nexport enum TunnelModule {\n  MyGoogleMap = 'my_google_map',\n  TwitterUserInfo = 'twitter_userinfo',\n  TwitterTweets = 'twitter_tweets',\n  TwitterCalendar = 'twitter_calendar',\n  YouTubePlaylist = 'youtube_playlist',\n  YouTubeVideoList = 'youtube_video_list',\n  InstagramMedias = 'instagram_medias',\n  InstagramCalendar = 'instagram_calendar',\n  BingWallpaper = 'bing_wallpaper',\n  GitHubSponsors = 'github_sponsors',\n  GitHubContributions = 'github_contributions',\n  NetEaseMusic = 'netease_music',\n  DoubanMovies = 'douban_movies',\n  OpenSeaAssets = 'opensea_assets',\n  OpenSeaCollections = 'opensea_collections',\n  OpenSourceGitHubStatistic = 'open_source_github_statistic',\n  OpenSourceNPMStatistic = 'open_source_npm_statistic'\n}\n","/**\n * @file BFF server config\n * @module config.bff\n * @author Surmon <https://github.com/surmon-china>\n */\n\nexport const BFF_TUNNEL_PREFIX = '/_tunnel'\nexport const BFF_PROXY_PREFIX = '/_proxy'\nexport const BFF_PROXY_ALLOWLIST = ['https://surmon.me', 'https://cdn.surmon.me']\n\nexport const getBFFServerPort = () => Number(process.env.PORT || 3000)\n","/**\n * @file App config\n * @module config.app\n * @author Surmon <https://github.com/surmon-china>\n */\n\nexport const DEFAULT_DELAY = 468\nexport const LONG_ARTICLE_THRESHOLD = 16688\n\nexport const META = Object.freeze({\n  title: 'Surmon.me',\n  zh_sub_title: '来苏之望',\n  en_sub_title: 'Come into the wild',\n  zh_biography: '本是浪蝶游蜂，自留半亩石池，但求直抒胸臆，挥墨九云之中',\n  en_biography: 'Either write something worth reading or do something worth writing.',\n  url: 'https://surmon.me',\n  domain: 'surmon.me',\n  author: 'Surmon',\n  primary: '#0088f5'\n})\n\nexport const GEO_INFO = Object.freeze({\n  zh_title: '苟活于此，养两条狗',\n  en_title: 'Omicron prison, Shanghai',\n  coordinates: [121.55152956275738, 31.215855513780504]\n})\n\nexport const MAPBOX_CONFIG = Object.freeze({\n  TOKEN: 'pk.eyJ1Ijoic3VybW9uIiwiYSI6ImNsNDE4YmkzNjB2Z2wzY3F5dWg2M2tqeWIifQ.JhgYGFI4zsuNiX9dH-pBDg',\n  STYLE_LIGHT: 'mapbox://styles/surmon/cl41fktzn000f14pet94oo1u4',\n  STYLE_DARK: 'mapbox://styles/surmon/cl41gy1qo000l15ry20j5ae0k',\n  ZOOM: 11.337439,\n  CENTER: [121.4930539351185, 31.227570979004497]\n})\n\nexport const IDENTITIES = Object.freeze({\n  GOOGLE_ANALYTICS_TRACKING_ID: 'UA-84887611-3',\n  GOOGLE_ADSENSE_PUBLISHER_ID: 'ca-pub-4710915636313788',\n  YOUTUBE_CHANNEL_ID: 'UCoL-j6T28PLSJ2U6ZdONS0w',\n  MUSIC_163_BGM_ALBUM_ID: '638949385',\n  DOUBAN_USER_ID: '56647958',\n  GITHUB_USER_NAME: 'surmon-china',\n  TWITTER_USER_NAME: 'surmon7788',\n  INSTAGRAM_USERNAME: 'surmon666',\n  INSTAGRAM_FB_ID: '17841405600281893',\n  BTC_ADDRESS: 'bc1qhpdu03tnexkj4xsm3lqzyjdddz6z0rj2n7fsze',\n  ETH_ADDRESS: '0xaD556974D449126efdeF23f4FF581861C301cB77',\n  OPENSEA_ETH: '0xaD556974D449126efdeF23f4FF581861C301cB77'\n})\n\nexport const VALUABLE_LINKS = Object.freeze({\n  RSS: '/rss.xml',\n  SITE_MAP: '/sitemap.xml',\n  UPTIME_STATUS: 'https://stats.uptimerobot.com/Q2k7OTXxJN',\n  NPM_HOMEPAGE: 'https://www.npmjs.com/~surmon',\n  PAYPAL: 'https://paypal.me/surmon',\n  GITHUB_SPONSORS: `https://github.com/sponsors/${IDENTITIES.GITHUB_USER_NAME}`,\n  GITHUB: `https://github.com/${IDENTITIES.GITHUB_USER_NAME}`,\n  GITHUB_SURMON_ME: 'https://github.com/surmon-china/surmon.me',\n  GITHUB_NODEPRESS: 'https://github.com/surmon-china/nodepress',\n  GITHUB_SURMON_ME_NATIVE: 'https://github.com/surmon-china/surmon.me.native',\n  GITHUB_BLOG_STAR_LIST: 'https://github.com/stars/surmon-china/lists/surmon-me',\n  APP_APK_FILE:\n    'https://raw.githubusercontent.com/surmon-china/surmon.me.native/master/dist/android/surmon.me.apk',\n  MARKDOWN: 'https://daringfireball.net/projects/markdown/',\n  GOOGLE_MY_MAP: `https://www.google.com/maps/d/embed?mid=1sRx6t0Yj1TutbwORCvjwTMgr70r62Z6w&z=3`,\n  GOOGLE_MY_MAP_KML: `https://www.google.com/maps/d/u/0/kml?forcekml=1&mid=1sRx6t0Yj1TutbwORCvjwTMgr70r62Z6w`,\n  DISCORD_GROUP: 'https://discord.surmon.me',\n  TELEGRAM_GROUP: 'https://t.me/+Z2wsxogVbYM2ZmE1',\n  MUSIC_163: `https://music.163.com/#/playlist?id=${IDENTITIES.MUSIC_163_BGM_ALBUM_ID}`,\n  YOUTUBE_CHANNEL: `https://www.youtube.com/channel/${IDENTITIES.YOUTUBE_CHANNEL_ID}`,\n  TELEGRAM: 'https://t.me/surmon',\n  OPENSEA: 'https://opensea.io/Surmon',\n  DOUBAN: 'https://www.douban.com/people/nocower',\n  DOUBAN_MOVIE: `https://m.douban.com/people/${IDENTITIES.DOUBAN_USER_ID}/movie_charts`,\n  QUORA: 'https://www.quora.com/profile/Surmon',\n  LINKEDIN: 'https://www.linkedin.com/in/surmon',\n  INSTAGRAM: `https://www.instagram.com/${IDENTITIES.INSTAGRAM_USERNAME}`,\n  TWITTER: `https://twitter.com/${IDENTITIES.TWITTER_USER_NAME}`\n})\n","/**\n * @file BFF Server helper\n * @module server.helper\n * @author Surmon <https://github.com/surmon-china>\n */\n\nimport path from 'path'\nimport { isDev } from '@/environment'\n\n// MARK: 与非生产资料解耦\nexport const NODEPRESS_API = `https://api.surmon.me`\n\nexport const ROOT_PATH = process.cwd()\nexport const DIST_PATH = path.join(ROOT_PATH, 'dist')\nexport const PRDO_CLIENT_PATH = path.join(DIST_PATH, 'client')\nexport const PRDO_SERVER_PATH = path.join(DIST_PATH, 'server')\n\nexport const PUBLIC_PATH = isDev ? path.join(ROOT_PATH, 'public') : PRDO_CLIENT_PATH\n","/**\n * @file BFF archive getter\n * @module server.getter.archive\n * @author Surmon <https://github.com/surmon-china>\n */\n\nimport axios from 'axios'\nimport { META } from '@/config/app.config'\nimport { NODEPRESS_API } from '../helpers/configurer'\n\nexport const getPageURL = (page) => `${META.url}/${page}`\nexport const getTagURL = (tag) => `${META.url}/tag/${tag}`\nexport const getCategoryURL = (category) => `${META.url}/category/${category}`\nexport const getArticleURL = (id) => `${META.url}/article/${id}`\n\nexport const getArchiveData = () => {\n  return axios\n    .get<any>(`${NODEPRESS_API}/archive`, { timeout: 6000 })\n    .then((response) => {\n      if (response.status === 200) {\n        return response.data.result\n      } else {\n        return Promise.reject(response.statusText)\n      }\n    })\n    .catch((error) => {\n      return Promise.reject(error.toJSON?.() || error)\n    })\n}\n","/**\n * @file Archive RSS generator\n * @module server.getter.rss\n * @author Surmon <https://github.com/surmon-china>\n */\n\nimport RSS from 'rss'\nimport { META } from '@/config/app.config'\nimport { getArchiveData, getArticleURL } from './archive'\n\nexport const getRSSXML = async (archiveData?: any) => {\n  const archive = archiveData || (await getArchiveData())\n  const feed = new RSS({\n    title: META.title,\n    description: META.zh_sub_title,\n    site_url: META.url,\n    feed_url: `${META.url}/rss.xml`,\n    image_url: `${META.url}/icon.png`,\n    managingEditor: META.author,\n    webMaster: META.author,\n    generator: `${META.domain}`,\n    categories: archive.categories.map((category) => category.slug),\n    copyright: `${new Date().getFullYear()} ${META.title}`,\n    language: 'zh',\n    ttl: 60\n  })\n  archive.articles.forEach((article) =>\n    feed.item({\n      title: article.title,\n      description: article.description,\n      url: getArticleURL(article.id),\n      guid: String(article.id),\n      categories: article.category.map((category) => category.slug),\n      author: META.author,\n      date: article.create_at,\n      enclosure: {\n        url: article.thumb\n      }\n    })\n  )\n  return feed.xml({ indent: true })\n}\n","/**\n * @file Archive sitemap generator\n * @module server.getter.sitemap\n * @author Surmon <https://github.com/surmon-china>\n */\n\nimport { Readable } from 'stream'\nimport { SitemapStream, streamToPromise, SitemapItemLoose, EnumChangefreq } from 'sitemap'\nimport { getArchiveData, getArticleURL, getPageURL, getTagURL, getCategoryURL } from './archive'\nimport { META } from '@/config/app.config'\n\nexport const getSitemapXML = async (archiveData?: any) => {\n  const archive = archiveData || (await getArchiveData())\n  const sitemapStream = new SitemapStream({\n    hostname: META.url\n  })\n\n  const sitemapItemList: SitemapItemLoose[] = [\n    { url: META.url, changefreq: EnumChangefreq.ALWAYS, priority: 1 },\n    {\n      url: getPageURL('about'),\n      changefreq: EnumChangefreq.YEARLY,\n      priority: 1\n    },\n    {\n      url: getPageURL('archive'),\n      changefreq: EnumChangefreq.ALWAYS,\n      priority: 1\n    },\n    {\n      url: getPageURL('guestbook'),\n      changefreq: EnumChangefreq.ALWAYS,\n      priority: 1\n    }\n  ]\n\n  archive.categories.forEach((category) => {\n    sitemapItemList.push({\n      priority: 0.6,\n      changefreq: EnumChangefreq.DAILY,\n      url: getCategoryURL(category.slug)\n    })\n  })\n\n  archive.tags.forEach((tag) => {\n    sitemapItemList.push({\n      priority: 0.6,\n      changefreq: EnumChangefreq.DAILY,\n      url: getTagURL(tag.slug)\n    })\n  })\n\n  archive.articles.forEach((article) => {\n    sitemapItemList.push({\n      priority: 0.8,\n      changefreq: EnumChangefreq.DAILY,\n      url: getArticleURL(article.id),\n      lastmodISO: new Date(article.update_at).toISOString()\n    })\n  })\n\n  return streamToPromise(Readable.from(sitemapItemList).pipe(sitemapStream)).then((data) => {\n    return data.toString()\n  })\n}\n","/**\n * @file Outside\n * @module transform.outside\n * @author Surmon <https://github.com/surmon-china>\n */\n\nexport const getGAScriptURL = (measurementID: string) => {\n  return `https://www.googletagmanager.com/gtag/js?id=${measurementID}`\n}\n","/**\n * @file BFF GA getter\n * @module server.getter.gtag\n * @author Surmon <https://github.com/surmon-china>\n */\n\nimport axios from 'axios'\nimport { IDENTITIES } from '@/config/app.config'\nimport { getGAScriptURL } from '@/transforms/gtag'\n\nexport const getGTagScript = async () => {\n  const response = await axios.get<string>(\n    getGAScriptURL(IDENTITIES.GOOGLE_ANALYTICS_TRACKING_ID),\n    {\n      timeout: 6000\n    }\n  )\n  if (response.status === 200) {\n    return response.data\n  } else {\n    throw response.data\n  }\n}\n","/**\n * @file BFF wallpaper getter\n * @module server.getter.wallpaper\n * @author Surmon <https://github.com/surmon-china>\n */\n\nimport WonderfulBingWallpaper, { WonderfulBingWallpaperOption } from 'wonderful-bing-wallpaper'\n\nexport interface IWallpaper {\n  zh: any\n  en: any\n}\n\nconst wbw = new WonderfulBingWallpaper()\n\n// 获取今日壁纸\nexport const getWallpapers = async (params?: WonderfulBingWallpaperOption): Promise<any> => {\n  const wallpaperJSON = await wbw.getWallpapers({ ...params, size: 8 })\n  try {\n    return wbw.humanizeWallpapers(wallpaperJSON)\n  } catch (error) {\n    throw 'wallpaper 控制器解析 JSON 失败' + error\n  }\n}\n\n// 今日壁纸缓存（ZH）\nexport const getZHWallpapers = () => {\n  return getWallpapers({\n    local: 'zh-CN',\n    host: 'cn.bing.com',\n    ensearch: 0\n  })\n}\n\n// 今日壁纸缓存（EN）\nexport const getENWallpapers = () => {\n  return getWallpapers({\n    local: 'en-US',\n    host: 'bing.com',\n    ensearch: 1\n  })\n}\n\nexport const getAllWallpapers = async (): Promise<IWallpaper> => {\n  const [zh, en] = await Promise.all([getZHWallpapers(), getENWallpapers()])\n  return { zh, en }\n}\n","/**\n * @file BFF google map getter\n * @module server.getter.my-google-map\n * @author Surmon <https://github.com/surmon-china>\n */\n\nimport axios from 'axios'\nimport { XMLParser } from 'fast-xml-parser'\nimport { VALUABLE_LINKS } from '@/config/app.config'\n\nconst parser = new XMLParser({\n  ignoreAttributes: false,\n  allowBooleanAttributes: true,\n  attributeNamePrefix: '@'\n})\n\nexport const getMyGoogleMap = () => {\n  return axios\n    .get<any>(VALUABLE_LINKS.GOOGLE_MY_MAP_KML, {\n      timeout: 6000\n    })\n    .then((response) => {\n      if (response.status === 200) {\n        return parser.parse(response.data).kml.Document\n      } else {\n        return Promise.reject(response.data)\n      }\n    })\n    .catch((error) => {\n      return Promise.reject(error.toJSON?.() || error)\n    })\n}\n","/**\n * @file BFF argv config\n * @module config.bff.argv\n * @author Surmon <https://github.com/surmon-china>\n */\n\nimport { argv } from 'yargs'\n\nexport const GITHUB_BEARER_TOKEN = argv.github_token\nexport const TWITTER_BEARER_TOKEN = argv.twitter_bearer_token\nexport const INSTAGRAM_TOKEN = argv.instagram_token\nexport const YOUTUBE_API_KEY = argv.youtube_token\n","/**\n * @file BFF GitHub getter\n * @module server.getter.github\n * @author Surmon <https://github.com/surmon-china>\n */\n\nimport axios from 'axios'\nimport { IDENTITIES } from '@/config/app.config'\nimport { GITHUB_BEARER_TOKEN } from '@/config/bff.argv'\n\nconst graphqlGitHub = <T = any>(query: string): Promise<T> => {\n  return axios\n    .request<any>({\n      // https://github.com/settings/tokens\n      headers: { Authorization: `bearer ${GITHUB_BEARER_TOKEN}` },\n      url: `https://api.github.com/graphql`,\n      method: 'POST',\n      data: JSON.stringify({\n        query: `query {\n        user(login: \"${IDENTITIES.GITHUB_USER_NAME}\") {\n          ${query}\n        }\n      }`\n      })\n    })\n    .then((response) => {\n      return response.data.errors\n        ? Promise.reject(response.data.errors.map((error) => error.message).join('; '))\n        : Promise.resolve(response.data.data.user)\n    })\n}\n\nexport const getGitHubSponsors = async () => {\n  const result = await graphqlGitHub(`\n    sponsors(first: 100) {\n      totalCount\n      edges {\n        node {\n          ... on User {\n            login\n            name\n            company\n            url\n            avatarUrl\n            websiteUrl\n          }\n          ... on Organization {\n            login\n            name\n            url\n            avatarUrl\n            websiteUrl\n          }\n        }\n      }\n    }\n  `)\n\n  return result.sponsors\n}\n\nconst isISODateString = (dateString: string) => {\n  if (!/\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}.\\d{3}Z/.test(dateString)) return false\n  return new Date(dateString).toISOString() === dateString\n}\n\nexport const getGitHubContributions = async (from: string, to: string): Promise<any> => {\n  if (!isISODateString(from) || !isISODateString(to)) {\n    return Promise.reject('Invalid date string!')\n  }\n\n  const result = await graphqlGitHub(`\n    contributionsCollection(from: \"${from}\", to: \"${to}\") {\n      contributionCalendar {\n        totalContributions\n        weeks {\n          contributionDays {\n            weekday\n            date\n            contributionCount\n            color\n          }\n        }\n      }\n    }\n  `)\n\n  return result.contributionsCollection.contributionCalendar\n}\n","/**\n * @file BFF Twitter getter\n * @module server.getter.twitter\n * @author Surmon <https://github.com/surmon-china>\n */\n\nimport axios from 'axios'\nimport { IDENTITIES } from '@/config/app.config'\nimport { TWITTER_BEARER_TOKEN } from '@/config/bff.argv'\n\n// 1. Generate tokens\n// https://developer.twitter.com/en/portal/projects-and-apps\n\n// 2. Get userinfo\n// https://developer.twitter.com/en/docs/twitter-api/users/lookup/api-reference/get-users-by-username-username\nconst getTwitterUserinfoByUsername = async (username: string) => {\n  const response = await axios.get<any>(`https://api.twitter.com/2/users/by/username/${username}`, {\n    timeout: 8000,\n    params: {\n      'user.fields': `location,url,description,profile_image_url,public_metrics`\n    },\n    headers: {\n      Authorization: `Bearer ${TWITTER_BEARER_TOKEN}`\n    }\n  })\n  if (response.status === 200 && response.data.data) {\n    return response.data.data\n  } else {\n    throw response.data\n  }\n}\n\n// 3. Get tweets\n// https://developer.twitter.com/en/docs/twitter-api/tweets/timelines/api-reference/get-users-id-tweets\nconst getTwitterTweetsByUID = async (UID: string) => {\n  const response = await axios.get<any>(`https://api.twitter.com/2/users/${UID}/tweets`, {\n    timeout: 8000,\n    params: {\n      exclude: 'replies',\n      expansions: `attachments.media_keys,author_id,entities.mentions.username,geo.place_id,in_reply_to_user_id,referenced_tweets.id,referenced_tweets.id.author_id`,\n      'tweet.fields': `attachments,author_id,context_annotations,conversation_id,created_at,entities,id,in_reply_to_user_id,lang,possibly_sensitive,public_metrics,referenced_tweets,reply_settings,source,text,withheld`,\n      'user.fields': `created_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,public_metrics,url,username,verified,withheld`,\n      'place.fields': `contained_within,country,country_code,full_name,id,name,place_type`,\n      'media.fields': `duration_ms,height,media_key,preview_image_url,type,url,width,public_metrics`,\n      max_results: 46\n    },\n    headers: {\n      Authorization: `Bearer ${TWITTER_BEARER_TOKEN}`\n    }\n  })\n  if (response.status === 200) {\n    return response.data\n  } else {\n    throw response.data\n  }\n}\n\nexport const getTwitterUserinfo = () => {\n  return getTwitterUserinfoByUsername(IDENTITIES.TWITTER_USER_NAME)\n}\n\nlet uidCache: string | null = null\nconst ensureUID = async () => {\n  if (uidCache) {\n    return uidCache\n  } else {\n    uidCache = (await getTwitterUserinfo()).id as string\n    return uidCache\n  }\n}\n\nexport const getTwitterTweets = async () => {\n  const uid = await ensureUID()\n  return await getTwitterTweetsByUID(uid)\n}\n\n// ---------------------------------------------------------\n// Tweets calendar\n\nconst fetchPageTweets = async (startTime: string, pagination_token?: string) => {\n  const uid = await ensureUID()\n  return axios\n    .get<any>(`https://api.twitter.com/2/users/${uid}/tweets`, {\n      timeout: 8000,\n      params: {\n        'tweet.fields': `id,created_at`,\n        start_time: startTime,\n        pagination_token,\n        max_results: 100\n      },\n      headers: {\n        Authorization: `Bearer ${TWITTER_BEARER_TOKEN}`\n      }\n    })\n    .then((response) => {\n      if (response.status === 200) {\n        return response.data\n      } else {\n        return Promise.reject(response.data)\n      }\n    })\n    .catch((error) => {\n      return Promise.reject(error.toJSON())\n    })\n}\n\ninterface AllTweetsFetchParams {\n  startTime: string\n  nextToken?: string\n  tweets?: Tweets\n  onSucceed?(tweets: Tweets)\n  onFailed?(error: any)\n}\n\nfunction doFetchAllTweets({\n  startTime,\n  nextToken,\n  tweets = [],\n  onSucceed,\n  onFailed\n}: AllTweetsFetchParams) {\n  fetchPageTweets(startTime, nextToken)\n    .then((result: any) => {\n      if (result.data) {\n        tweets.push(...result.data)\n      }\n      if (result.meta.next_token) {\n        doFetchAllTweets({\n          startTime,\n          nextToken: result.meta.next_token,\n          tweets,\n          onSucceed,\n          onFailed\n        })\n      } else {\n        onSucceed?.(tweets)\n      }\n    })\n    .catch(onFailed)\n}\n\ntype Tweets = Array<{ text: string; id: string; created_at: string }>\nconst calendarTemp = {\n  tweets: [] as Tweets,\n  calendar: [] as Array<{ count: number; date: string }>\n}\n\nfunction fetchAllTweets() {\n  console.info(`[BFF] twitter.fetchAllTweets`)\n  calendarTemp.tweets = []\n  calendarTemp.calendar = []\n\n  // startTime\n  const today = new Date()\n  today.setDate(1)\n  today.setFullYear(today.getFullYear() - 1)\n  const prevYearToday = today.toISOString()\n\n  doFetchAllTweets({\n    startTime: prevYearToday,\n    onSucceed: (tweets) => {\n      console.info(\n        `[BFF] twitter.fetchAllTweets done, ${tweets.length} tweets. refetch when after 18h`\n      )\n      setTimeout(() => fetchAllTweets(), 18 * 60 * 60 * 1000)\n      const map = new Map<string, number>()\n      tweets.forEach((tweet) => {\n        const key = tweet.created_at.slice(0, 10)\n        map.has(key) ? map.set(key, map.get(key)! + 1) : map.set(key, 1)\n      })\n      calendarTemp.calendar = Array.from(map, ([date, count]) => ({ date, count }))\n    },\n    onFailed: (error) => {\n      console.warn(`[BFF] twitter.fetchAllTweets error, retry when after 30s`, error)\n      setTimeout(() => fetchAllTweets(), 30 * 1000)\n    }\n  })\n}\n\nexport const initTwitterCalendar = () => fetchAllTweets()\nexport const getTwitterCalendar = async () => calendarTemp.calendar\n","/**\n * @file BFF instagram getter\n * @module server.getter.instagram\n * @author Surmon <https://github.com/surmon-china>\n */\n\nimport axios from 'axios'\nimport { IDENTITIES } from '@/config/app.config'\nimport { INSTAGRAM_TOKEN } from '@/config/bff.argv'\n\n// 1. Generate long-lived access tokens for Instagram Testers (60 days)\n// https://developers.facebook.com/apps/625907498725071/instagram-basic-display/basic-display/\n\n// 2. Get medias useing API\n// https://developers.facebook.com/docs/instagram-basic-display-api/reference/media#fields\n\n// 3. TODO: Refresh token\n// https://developers.facebook.com/docs/instagram-basic-display-api/reference/refresh_access_token\n\nexport interface InstagramMediaItem {\n  id: string\n  username: string\n  caption?: string\n  permalink: string\n  media_type: 'IMAGE' | 'CAROUSEL_ALBUM' | 'VIDEO' | string\n  media_url: string\n  thumbnail_url?: string\n  timestamp: string\n}\n\nexport const getInstagramMedias = async () => {\n  const fields = `id,username,permalink,caption,media_type,media_url,thumbnail_url,timestamp`\n  const response = await axios.get<{ data: Array<InstagramMediaItem> }>(\n    `https://graph.instagram.com/me/media?fields=${fields}&access_token=${INSTAGRAM_TOKEN}`,\n    { timeout: 8000 }\n  )\n  if (response.status === 200 && response.data.data) {\n    return response.data.data\n  } else {\n    throw response.data\n  }\n}\n\n// https://developers.facebook.com/docs/instagram-basic-display-api/reference/user/media\nconst fetchPageMedias = (sinceUnix: number, nextToken?: string) => {\n  return axios\n    .get<any>(`https://graph.instagram.com/v13.0/${IDENTITIES.INSTAGRAM_FB_ID}/media`, {\n      timeout: 8000,\n      params: {\n        access_token: INSTAGRAM_TOKEN,\n        fields: `id,timestamp`,\n        limit: 100, // max 100\n        since: sinceUnix,\n        after: nextToken\n      }\n    })\n    .then((response) => {\n      if (response.status === 200 && response.data.data) {\n        return response.data\n      } else {\n        return Promise.reject(response.data)\n      }\n    })\n    .catch((error) => {\n      return Promise.reject(error.toJSON())\n    })\n}\n\ntype Medias = Array<InstagramMediaItem>\ninterface AllMediasFetchParams {\n  sinceUnix: number\n  nextToken?: string\n  medias?: Medias\n  onSucceed?(medias: Medias)\n  onFailed?(error: any)\n}\n\nfunction doFetchAllMedias({\n  sinceUnix,\n  nextToken,\n  medias = [],\n  onSucceed,\n  onFailed\n}: AllMediasFetchParams) {\n  fetchPageMedias(sinceUnix, nextToken)\n    .then((result: any) => {\n      medias.push(...result.data)\n      if (result.paging.next) {\n        doFetchAllMedias({\n          sinceUnix,\n          nextToken: result.paging.cursors.after,\n          medias,\n          onSucceed,\n          onFailed\n        })\n      } else {\n        onSucceed?.(medias)\n      }\n    })\n    .catch(onFailed)\n}\n\nconst calendarTemp = {\n  data: [] as Array<{ count: number; date: string }>\n}\n\nfunction fetchAllMedias() {\n  console.info(`[BFF] instagram.fetchAllMedias`)\n  calendarTemp.data = []\n\n  // startTime\n  const today = new Date()\n  today.setDate(1)\n  today.setFullYear(today.getFullYear() - 1)\n  const prevYearToday = Math.round(today.getTime() / 1000)\n\n  doFetchAllMedias({\n    sinceUnix: prevYearToday,\n    onSucceed: (medias) => {\n      console.info(\n        `[BFF] instagram.fetchAllMedias done, ${medias.length} medias. refetch when after 18h`\n      )\n      setTimeout(() => fetchAllMedias(), 18 * 60 * 60 * 1000)\n      const map = new Map<string, number>()\n      medias.forEach((tweet) => {\n        const key = tweet.timestamp.slice(0, 10)\n        map.has(key) ? map.set(key, map.get(key)! + 1) : map.set(key, 1)\n      })\n      calendarTemp.data = Array.from(map, ([date, count]) => ({ date, count }))\n    },\n    onFailed: (error) => {\n      console.warn(`[BFF] instagram.fetchAllMedias error, retry when after 30s`, error)\n      setTimeout(() => fetchAllMedias(), 30 * 1000)\n    }\n  })\n}\n\nexport const initInstagramCalendar = () => fetchAllMedias()\nexport const getInstagramCalendar = async () => calendarTemp.data\n","/**\n * @file BFF YouTube getter\n * @module server.getter.instagram\n * @author Surmon <https://github.com/surmon-china>\n */\n\nimport axios from 'axios'\nimport { IDENTITIES } from '@/config/app.config'\nimport { YOUTUBE_API_KEY } from '@/config/bff.argv'\n\n// 1. Generate API key\n// https://console.cloud.google.com/apis/credentials\n\n// 2. Get playlist by Channel ID\n// https://developers.google.com/youtube/v3/docs/playlists/list\nexport const getYouTubeChannelPlayLists = async () => {\n  const response = await axios.get<any>(`https://www.googleapis.com/youtube/v3/playlists`, {\n    timeout: 8000,\n    params: {\n      part: 'snippet,contentDetails',\n      maxResults: 50,\n      channelId: IDENTITIES.YOUTUBE_CHANNEL_ID,\n      key: YOUTUBE_API_KEY\n    }\n  })\n  if (response.status === 200 && response.data.items) {\n    return response.data.items\n  } else {\n    throw response.data\n  }\n}\n\n// 3. Get video list by playlist ID\n// https://developers.google.com/youtube/v3/docs/playlistItems/list\n// MARK: can't order by date, max results 50\nexport const getYouTubeVideoListByPlayerlistID = async (playlistID: string) => {\n  const response = await axios.get<any>(`https://www.googleapis.com/youtube/v3/playlistItems`, {\n    timeout: 8000,\n    params: {\n      part: 'snippet,contentDetails',\n      maxResults: 50,\n      playlistId: playlistID,\n      key: YOUTUBE_API_KEY\n    }\n  })\n  if (response.status === 200 && response.data.items) {\n    return response.data.items\n  } else {\n    throw response.data\n  }\n}\n","/**\n * @file BFF open-srouce getter\n * @module server.getter.open-srouce\n * @author Surmon <https://github.com/surmon-china>\n */\n\nimport axios from 'axios'\nimport { IDENTITIES } from '@/config/app.config'\n\nconst fetchStatisticJSON = async (fileName: string) => {\n  const url = `https://raw.githubusercontent.com/${IDENTITIES.GITHUB_USER_NAME}/${IDENTITIES.GITHUB_USER_NAME}/release/${fileName}`\n  const response = await axios.get<string>(url, { timeout: 6000 })\n  if (response.status === 200) {\n    return response.data\n  } else {\n    throw response.data\n  }\n}\n\nexport const getGitHubStatistic = () => fetchStatisticJSON('github.json')\nexport const getNPMStatistic = () => fetchStatisticJSON('npm.json')\n","/**\n * @file BFF opensea getter\n * @module server.getter.opensea\n * @author Surmon <https://github.com/surmon-china>\n */\n\nimport axios from 'axios'\nimport { IDENTITIES } from '@/config/app.config'\n\n// https://docs.opensea.io/reference/collection-model\nexport interface OpenSeaCollection {\n  primary_asset_contracts: []\n  traits: Record<string, Record<string, number>>\n  stats: {\n    one_hour_volume: number\n    one_hour_change: number\n    one_hour_sales: number\n    one_hour_sales_change: number\n    one_hour_average_price: number\n    one_hour_difference: number\n    six_hour_volume: number\n    six_hour_change: number\n    six_hour_sales: number\n    six_hour_sales_change: number\n    six_hour_average_price: number\n    six_hour_difference: number\n    one_day_volume: number\n    one_day_change: number\n    one_day_sales: number\n    one_day_sales_change: number\n    one_day_average_price: number\n    one_day_difference: number\n    seven_day_volume: number\n    seven_day_change: number\n    seven_day_sales: number\n    seven_day_average_price: number\n    seven_day_difference: number\n    thirty_day_volume: number\n    thirty_day_change: number\n    thirty_day_sales: number\n    thirty_day_average_price: number\n    thirty_day_difference: number\n    total_volume: number\n    total_sales: number\n    total_supply: number\n    count: number\n    num_owners: number\n    average_price: number\n    num_reports: number\n    market_cap: number\n    floor_price: number\n  }\n  banner_image_url: string\n  chat_url: string | null\n  created_date: string\n  default_to_fiat: boolean\n  description: string\n  dev_buyer_fee_basis_points: string\n  dev_seller_fee_basis_points: string\n  discord_url: string\n  display_data: {\n    card_display_style: string\n  }\n  external_url: string | null\n  featured: boolean\n  featured_image_url: string\n  hidden: boolean\n  safelist_request_status: string\n  image_url: string\n  is_subject_to_whitelist: boolean\n  large_image_url: string\n  medium_username: string | null\n  name: string\n  only_proxied_transfers: boolean\n  opensea_buyer_fee_basis_points: string\n  opensea_seller_fee_basis_points: string\n  payout_address: string\n  require_email: boolean\n  short_description: string | null\n  slug: string\n  telegram_url: string | null\n  twitter_username: string | null\n  instagram_username: string | null\n  wiki_url: string | null\n  is_nsfw: boolean\n  fees: Record<string, Record<string, number>>\n  is_rarity_enabled: boolean\n  owned_asset_count: number\n}\n\n// https://docs.opensea.io/reference/asset-object\nexport interface OpenSeaAssetItem {\n  id: number\n  name: string\n  image_url: string\n  background_color: string | null\n  external_link: string | null\n  last_sale: string\n  traits: Array<{\n    trait_type: string\n    trait_count: number\n    value: string\n  }>\n  collection: Omit<OpenSeaCollection, 'stats' | 'traits'>\n  asset_contract: {\n    address: string\n    asset_contract_type: string\n    created_date: string\n    name: string\n    nft_version: string | null\n    opensea_version: string\n    owner: number\n    schema_name: string\n    symbol: string\n    total_supply: string | null\n    description: string\n    external_link: string | null\n    image_url: string\n    default_to_fiat: boolean\n    dev_buyer_fee_basis_points: number\n    dev_seller_fee_basis_points: number\n    only_proxied_transfers: boolean\n    opensea_buyer_fee_basis_points: number\n    opensea_seller_fee_basis_points: number\n    buyer_fee_basis_points: number\n    seller_fee_basis_points: number\n    payout_address: string\n  }\n  owner: {\n    user: {\n      username: string\n    }\n    profile_img_url: string\n    address: string\n    config: string\n  }\n  creator: {\n    user: {\n      username: string\n    }\n    profile_img_url: string\n    address: string\n    config: string\n  }\n  num_sales: number\n  image_preview_url: string | null\n  image_thumbnail_url: string | null\n  image_original_url: string | null\n  animation_url: string | null\n  animation_original_url: string | null\n  description: string\n  permalink: string\n  decimals: string\n  token_metadata: string\n  is_nsfw: boolean\n  seaport_sell_orders: Array<any> | null\n  top_bid: string\n  listing_date: string\n  is_presale: true\n  transfer_fee: string\n  transfer_fee_payment_token: string\n  supports_wyvern: true\n  rarity_data: string\n  token_id: string\n}\n\nexport interface OpenSeaAssetsResult {\n  next: string | null\n  previous: string | null\n  assets: Array<OpenSeaAssetItem>\n}\n\nexport const getOpenSeaAssets = async (cursor?: string): Promise<OpenSeaAssetsResult> => {\n  // https://docs.opensea.io/reference/getting-assets\n  const response = await axios.get<OpenSeaAssetsResult>(`https://api.opensea.io/api/v1/assets`, {\n    params: {\n      // cursor,\n      owner: IDENTITIES.OPENSEA_ETH,\n      order_direction: 'desc',\n      include_orders: 'false',\n      limit: '30',\n      format: 'json'\n    },\n    headers: {\n      // https://docs.opensea.io/reference/request-an-api-key\n      'x-api-key': ''\n    }\n  })\n  if (response.status === 200) {\n    return response.data\n  } else {\n    throw response.data\n  }\n}\n\nexport const getOpenSeaCollections = async (): Promise<Array<OpenSeaCollection>> => {\n  // https://docs.opensea.io/reference/retrieving-collections\n  const response = await axios.get<Array<OpenSeaCollection>>(\n    `https://api.opensea.io/api/v1/collections`,\n    {\n      params: {\n        asset_owner: IDENTITIES.OPENSEA_ETH,\n        limit: '300',\n        format: 'json'\n      },\n      headers: {\n        // https://docs.opensea.io/reference/request-an-api-key\n        'x-api-key': ''\n      }\n    }\n  )\n  if (response.status === 200) {\n    return response.data\n  } else {\n    throw response.data\n  }\n}\n","/**\n * @file BFF douban getter\n * @module server.getter.douban\n * @author Surmon <https://github.com/surmon-china>\n */\n\nimport axios from 'axios'\nimport { IDENTITIES, VALUABLE_LINKS } from '@/config/app.config'\n\nexport const getDoubanMovies = () => {\n  const URL = `https://m.douban.com/rexxar/api/v2/user/${IDENTITIES.DOUBAN_USER_ID}/collection_stats?type=movie&for_mobile=1`\n  return axios\n    .get<any>(URL, {\n      timeout: 6000,\n      headers: {\n        Referer: VALUABLE_LINKS.DOUBAN_MOVIE\n      }\n    })\n    .then((response) => {\n      if (response.status === 200) {\n        return response.data\n      } else {\n        return Promise.reject(response.data)\n      }\n    })\n    .catch((error) => {\n      return Promise.reject(error.toJSON?.() || error)\n    })\n}\n","/**\n * @file BFF music getter\n * @module server.getter.music\n * @author Surmon <https://github.com/surmon-china>\n */\n\nimport axios from 'axios'\nimport { IDENTITIES } from '@/config/app.config'\n\n// https://521dimensions.com/open-source/amplitudejs/docs/configuration/playlists.html\n// https://521dimensions.com/open-source/amplitudejs/docs/configuration/song-objects.html#special-keys\nexport interface Song {\n  id: number\n  duration: number\n  name: string\n  album: string\n  artist: string\n  cover_art_url: string\n  url: string\n}\n\nconst PLAY_LIST_LIMIT = 168\n\nexport const getSongList = async (): Promise<Array<Song>> => {\n  // https://github.com/Binaryify/NeteaseCloudMusicApi/blob/a0500ec648f22a1dd20fc7b529126f813aa26935/module/playlist_track_all.js\n  const playlistDetail = await axios.get<any>(\n    `https://music.163.com/api/v6/playlist/detail?id=${IDENTITIES.MUSIC_163_BGM_ALBUM_ID}`,\n    { timeout: 6000 }\n  )\n  if (playlistDetail.data.code < 0) {\n    throw new Error(playlistDetail.data.message)\n  }\n\n  const trackIDs = (playlistDetail.data.playlist?.trackIds as any[]) || []\n  const idsParams = trackIDs\n    .slice(0, PLAY_LIST_LIMIT)\n    .map((id) => `{id:${id.id}}`)\n    .join(',')\n  const songListDetail = await axios.get<any>(\n    `https://music.163.com/api/v3/song/detail?c=[${idsParams}]`,\n    { timeout: 6000 }\n  )\n  if (!songListDetail.data.songs) {\n    throw new Error(songListDetail.data)\n  }\n\n  const songs = songListDetail.data.songs || []\n  return (\n    songs\n      // 过滤掉无版权音乐\n      // https://binaryify.github.io/NeteaseCloudMusicApi/#/?id=%e8%8e%b7%e5%8f%96%e7%94%a8%e6%88%b7%e6%ad%8c%e5%8d%95\n      .filter((song) => !song.noCopyrightRcmd)\n      .slice(0, PLAY_LIST_LIMIT)\n      .map(\n        (song) =>\n          ({\n            id: song.id,\n            duration: song.dt,\n            name: song.name,\n            album: song.al?.name || '-',\n            artist: (song.ar || []).map((artist) => artist.name).join(' / '),\n            cover_art_url: song.al?.picUrl,\n            // https://binaryify.github.io/NeteaseCloudMusicApi/#/?id=%e8%8e%b7%e5%8f%96%e9%9f%b3%e4%b9%90-url\n            url: `https://music.163.com/song/media/outer/url?id=${song.id}.mp3`\n          } as Song)\n      )\n  )\n}\n","import type { MetaResult } from '@/composables/meta'\n\nexport const resolveTemplate = (config: {\n  template: string\n  appHTML: string\n  metas: MetaResult\n  scripts?: string\n  manifest?: any\n}) => {\n  const { template, appHTML, metas, scripts } = config\n\n  const bodyScripts = [\n    scripts\n    // MARK: https://cn.vitejs.dev/config/#build-ssrmanifest\n    // client output less assets (3 js + 1 css) & built-in HTML\n    // manifest\n  ].join('\\n')\n\n  const html = template\n    // MARK: replace! $ sign & use function replacer\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace#specifying_a_string_as_a_parameter\n    .replace(/<title>[\\s\\S]*<\\/title>/, '')\n    .replace(`<html`, () => `<html ${metas.htmlAttrs} `)\n    .replace(`<head>`, () => `<head>\\n${metas.headTags}`)\n    .replace(`<!--app-html-->`, () => appHTML)\n    .replace(`<body>`, () => `<body ${metas.bodyAttrs}>`)\n    .replace(`</body>`, () => `\\n${bodyScripts}\\n</body>`)\n\n  return html\n}\n","import fs from 'fs'\nimport path from 'path'\nimport { Express } from 'express'\nimport { createServer } from 'vite'\nimport type { RenderResult } from '@/ssr'\nimport { ROOT_PATH } from '../helpers/configurer'\nimport { CacheClient } from '../cache'\nimport { resolveTemplate } from './template'\n\nexport const enableDevRenderer = async (app: Express, cache: CacheClient) => {\n  const viteServer = await createServer({\n    root: process.cwd(),\n    logLevel: 'info',\n    server: {\n      middlewareMode: true,\n      watch: {\n        usePolling: true,\n        interval: 100\n      }\n    }\n  })\n\n  // use vite's connect instance as middleware\n  app.use(viteServer.middlewares)\n  app.use('*', async (request, response) => {\n    const { renderApp, renderError } = await viteServer.ssrLoadModule('/src/ssr.ts')\n    let template = fs.readFileSync(path.resolve(ROOT_PATH, 'index.html'), 'utf-8')\n\n    try {\n      const url = request.originalUrl\n      template = await viteServer.transformIndexHtml(url, template)\n      const redered: RenderResult = await renderApp(request, cache)\n      response\n        .status(redered.code)\n        .set({ 'Content-Type': 'text/html' })\n        .end(\n          resolveTemplate({\n            template,\n            appHTML: redered.html,\n            metas: redered.metas,\n            scripts: redered.scripts\n          })\n        )\n    } catch (error: any) {\n      viteServer.ssrFixStacktrace(error)\n      const redered: RenderResult = await renderError(request, error)\n      response.status(redered.code).end(\n        resolveTemplate({\n          template,\n          appHTML: redered.html,\n          metas: redered.metas,\n          scripts: redered.scripts\n        })\n      )\n    }\n  })\n}\n","import fs from 'fs'\nimport path from 'path'\nimport { Express } from 'express'\nimport { DIST_PATH, PRDO_SERVER_PATH } from '../helpers/configurer'\nimport { CacheClient } from '../cache'\nimport { resolveTemplate } from './template'\nimport type { RenderResult } from '@/ssr'\n\nexport const enableProdRenderer = async (app: Express, cache: CacheClient) => {\n  const template = fs.readFileSync(path.resolve(DIST_PATH, 'template.html'), 'utf-8')\n  // eslint-disable-next-line @typescript-eslint/no-var-requires\n  const { renderApp, renderError } = require(path.resolve(PRDO_SERVER_PATH, 'ssr.js'))\n\n  app.use('*', async (request, response) => {\n    try {\n      const redered: RenderResult = await renderApp(request, cache)\n      response\n        .status(redered.code)\n        .set({ 'Content-Type': 'text/html' })\n        .end(\n          resolveTemplate({\n            template,\n            appHTML: redered.html,\n            metas: redered.metas,\n            scripts: redered.scripts\n          })\n        )\n    } catch (error: any) {\n      const redered: RenderResult = await renderError(request, error)\n      response.status(redered.code).end(\n        resolveTemplate({\n          template,\n          appHTML: redered.html,\n          metas: redered.metas,\n          scripts: redered.scripts\n        })\n      )\n    }\n  })\n}\n","/**\n * @file Error constant\n * @module constant.error\n * @author Surmon <https://github.com/surmon-china>\n */\n\nexport const BAD_REQUEST = 400\nexport const FORBIDDEN = 403\nexport const NOT_FOUND = 404\nexport const INVALID_ERROR = 500\n","/**\n * @file BFF Server responsor\n * @module server.responsor\n * @author Surmon <https://github.com/surmon-china>\n */\n\nimport { RequestHandler, Response } from 'express'\nimport { INVALID_ERROR } from '@/constants/error'\n\nexport const erroror = (response: Response, error: any) => {\n  console.warn(`[BFF] error:`, error)\n  response.status(INVALID_ERROR)\n  response.send(error?.message || String(error))\n}\n\nexport const responsor = (promise: () => Promise<any>): RequestHandler => {\n  return (_, response) => {\n    promise()\n      .then((data) => response.send(data))\n      .catch((error) => erroror(response, error))\n  }\n}\n","/**\n * @file BFF Server cacher\n * @module server.cacher\n * @author Surmon <https://github.com/surmon-china>\n */\n\nimport type { CacheClient } from '../cache'\n\nexport interface CacherConfig {\n  cache: CacheClient\n  getter: () => Promise<any>\n  /** cache key */\n  key: string\n  /** cache age [seconds] */\n  age: number\n  /** retry when after [seconds] */\n  retryWhen?: number\n}\n\n// fetch & cache\nconst fetchAndCache = async (config: CacherConfig) => {\n  const data = await config.getter()\n  await config.cache.set(config.key, data, config.age)\n  return data\n}\n\n// timeout prefetch\nconst setTimeoutPreRefresh = (config: CacherConfig, preSeconds: number, refreshCount = 1) => {\n  const timeoutSeconds = config.age - preSeconds\n  console.info(\n    '[cacher] setTimeoutPreRefresh',\n    `> ${config.key} + ${refreshCount}`,\n    `> cache expire when after ${config.age}s`,\n    `> pre refresh when after ${timeoutSeconds}s`\n  )\n\n  setTimeout(async () => {\n    try {\n      await fetchAndCache(config)\n      setTimeoutPreRefresh(config, preSeconds, refreshCount + 1)\n    } catch (error) {\n      console.warn(\n        `[cacher] setTimeoutPreRefresh ERROR!`,\n        `> ${config.key} + ${refreshCount}`,\n        error\n      )\n    }\n  }, timeoutSeconds * 1000)\n}\n\nconst retryingMap = new Map<string, boolean>()\nconst retryFetch = async (config: CacherConfig) => {\n  if (await config.cache.has(config.key)) {\n    retryingMap.set(config.key, false)\n    return\n  }\n\n  try {\n    await fetchAndCache(config)\n  } catch (error) {\n    console.warn('[cacher] retry error:', error)\n  } finally {\n    retryingMap.set(config.key, false)\n  }\n}\n\nexport const cacher = async (_config: CacherConfig) => {\n  // key prefix\n  const config = {\n    ..._config,\n    key: `bff_${_config.key}`\n  }\n\n  // cached\n  if (await config.cache.has(config.key)) {\n    return await config.cache.get(config.key)\n  }\n\n  try {\n    // 1. fetch & cache\n    const data = await fetchAndCache(config)\n    // 2. set timeout pre 1 min refresh\n    setTimeoutPreRefresh(config, 60)\n    // 3. return data\n    return data\n  } catch (error: any) {\n    // retry only once\n    if (config.retryWhen && !retryingMap.get(config.key)) {\n      retryingMap.set(config.key, true)\n      setTimeout(() => retryFetch({ ...config }), config.retryWhen * 1000)\n    }\n\n    if (typeof error === 'string') {\n      return Promise.reject(`cacher error > ${error}`)\n    }\n\n    const err = (error as any).toJSON?.() || error\n    err.name = `cacher error > ${err.name || ''}`\n    return Promise.reject(err)\n  }\n}\n","/**\n * @file Proxy constant\n * @module constant.proxy\n * @author Surmon <https://github.com/surmon-china>\n */\n\nexport enum ProxyModule {\n  Default = 'default',\n  Douban = 'douban',\n  NetEaseMusic = 'netease-music',\n  Instagram = 'instagram',\n  YouTube = 'youtube',\n  Disqus = 'disqus'\n}\n","/**\n * @file BFF Server proxy\n * @module server.proxy\n * @author Surmon <https://github.com/surmon-china>\n */\n\nimport { RequestHandler } from 'express'\nimport { createProxyServer } from 'http-proxy'\nimport { FORBIDDEN, BAD_REQUEST } from '@/constants/error'\nimport { ProxyModule } from '@/constants/proxy'\nimport { BFF_PROXY_PREFIX, BFF_PROXY_ALLOWLIST } from '@/config/bff.config'\nimport { isProd } from '@/environment'\n\ninterface ProxyConfigItem {\n  module: ProxyModule\n  origin?: string\n  referer?: string\n}\n\nconst proxys: ProxyConfigItem[] = [\n  {\n    module: ProxyModule.Default,\n    origin: 'https://surmon.me',\n    referer: 'https://surmon.me/'\n  },\n  {\n    module: ProxyModule.Douban,\n    origin: 'https://www.douban.com',\n    referer: 'https://www.douban.com/'\n  },\n  {\n    module: ProxyModule.Instagram,\n    origin: 'https://www.instagram.com',\n    referer: 'https://www.instagram.com/'\n  },\n  {\n    module: ProxyModule.YouTube,\n    origin: 'https://www.youtube.com',\n    referer: 'https://www.youtube.com/'\n  },\n  {\n    module: ProxyModule.NetEaseMusic,\n    origin: 'https://music.163.com',\n    referer: 'https://music.163.com/'\n  },\n  {\n    module: ProxyModule.Disqus,\n    referer: 'https://surmon.disqus.com/'\n  }\n]\n\nexport const PROXY_ROUTE_PATH = `${BFF_PROXY_PREFIX}/:module/*`\n\nexport const proxyer = (): RequestHandler => {\n  // https://github.com/http-party/node-http-proxy\n  const proxyMap = new Map(proxys.map(({ module, ...rest }) => [module, rest]))\n  const proxy = createProxyServer({\n    prependPath: true,\n    ignorePath: true,\n    toProxy: false,\n    xfwd: true\n  })\n\n  // https://github.com/http-party/node-http-proxy/issues/813\n  proxy.on('error', (error: any, _, response: any, target: any) => {\n    console.warn(`[BFF] proxy error: ${error.message} > ${target?.href}`)\n    if (!response.headersSent) {\n      response.writeHead(500, { 'content-type': 'application/json' })\n    }\n    response.end(JSON.stringify({ error: 'proxy_error', reason: error.message }))\n  })\n\n  proxy.on('proxyReq', (proxyRequest) => {\n    proxyRequest.setHeader(\n      'User-Agent',\n      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3223.8 Safari/'\n    )\n  })\n\n  proxy.on('proxyRes', (proxyResponse, request: any) => {\n    const statusCode = proxyResponse.statusCode as number\n    const location = proxyResponse.headers.location\n    if ([301, 302, 307, 308].includes(statusCode) && location) {\n      proxyResponse.headers.location = `${BFF_PROXY_PREFIX}/${\n        request.params.module\n      }/${encodeURIComponent(location)}`\n    }\n    // proxy cache\n    if (statusCode === 200) {\n      proxyResponse.headers['cache-control'] = `max-age=315360000`\n    }\n  })\n\n  return (request, response) => {\n    if (isProd) {\n      const referer = (request.headers.referrer as string) || request.headers.referer\n      const origin = request.headers.origin\n      const isAllowedReferer = !referer || BFF_PROXY_ALLOWLIST.some((i) => referer.startsWith(i))\n      const isAllowedOrigin = !origin || BFF_PROXY_ALLOWLIST.some((i) => origin.startsWith(i))\n      if (!isAllowedReferer || !isAllowedOrigin) {\n        response.status(FORBIDDEN).send()\n        return\n      }\n    }\n\n    const config = proxyMap.get(request.params.module as ProxyModule)\n    const targetURL = decodeURIComponent(request.params['0'])\n    let parsedURL: URL | null = null\n    try {\n      parsedURL = new URL(targetURL)\n    } catch (error) {\n      response.status(BAD_REQUEST).send()\n      return\n    }\n\n    const headers: any = {}\n    if (config?.origin) {\n      headers['Origin'] = config.origin\n    }\n    if (config?.referer) {\n      headers['Referer'] = config.referer\n    }\n\n    proxy.web(request, response, {\n      target: targetURL,\n      changeOrigin: true,\n      followRedirects: false,\n      autoRewrite: false,\n      headers: {\n        host: parsedURL.hostname,\n        ...headers\n      }\n    })\n  }\n}\n","/**\n * @file Universal Server cache\n * @module server.cache\n * @author Surmon <https://github.com/surmon-china>\n */\n\nimport LRU from 'lru-cache'\nimport { createClient } from 'redis'\nimport { META } from '@/config/app.config'\n\nexport interface CacheClient {\n  set(\n    key: string,\n    value: any,\n    /** cache age [seconds] */\n    maxAge?: number\n  ): Promise<void>\n  get<T = any>(key: string): Promise<T>\n  has(key: string): Promise<boolean>\n  delete(key: string): Promise<any>\n  clear(): Promise<void>\n}\n\nconst getLRUClient = (): CacheClient => {\n  // https://github.com/isaacs/node-lru-cache\n  const lruCache = new LRU<string, any>({\n    max: 500,\n    ttl: 0 // MARK: default 0 \"no TTL\" never expire\n  })\n\n  return {\n    set: async (key: string, value: any, maxAge?: number) => {\n      if (maxAge) {\n        lruCache.set(key, value, { ttl: maxAge * 1000 })\n      } else {\n        lruCache.set(key, value)\n      }\n    },\n    get: async (key) => lruCache.get(key)!,\n    has: async (key) => lruCache.has(key),\n    delete: async (key) => lruCache.delete(key),\n    clear: async () => lruCache.clear()\n  }\n}\n\nconst getRedisClient = async (): Promise<CacheClient> => {\n  // https://github.com/redis/node-redis\n  const client = createClient({\n    socket: {\n      // Only once connect! Redis error > reject\n      reconnectStrategy: () => new Error(`can't connect to Redis!`)\n    }\n  })\n  client.on('connect', () => console.info('[redis]', 'connecting...'))\n  client.on('reconnecting', () => console.info('[redis]', 'reconnecting...'))\n  client.on('ready', () => console.info('[redis]', 'readied!'))\n  client.on('error', (error) => console.warn('[redis]', 'Client Error!', error.message || error))\n  await client.connect()\n\n  const getCacheKey = (key: string) => {\n    const cacheKeyPrefix = META.domain.replace(/\\./gi, '_')\n    return `__${cacheKeyPrefix}_${key}`\n  }\n\n  const set: CacheClient['set'] = async (key, value, maxAge) => {\n    const _value = value ? JSON.stringify(value) : ''\n    if (maxAge) {\n      // https://redis.io/commands/setex\n      await client.setEx(getCacheKey(key), maxAge, _value)\n    } else {\n      await client.set(getCacheKey(key), _value)\n    }\n  }\n\n  const get: CacheClient['get'] = async (key) => {\n    const value = await client.get(getCacheKey(key))\n    return value ? JSON.parse(value) : value\n  }\n\n  const has: CacheClient['has'] = async (key) => {\n    const value = await client.exists(getCacheKey(key))\n    return Boolean(value)\n  }\n\n  const del: CacheClient['delete'] = (key) => client.del(getCacheKey(key))\n\n  const clear: CacheClient['clear'] = async () => {\n    const keys = await client.keys(getCacheKey('*'))\n    if (keys.length) {\n      await client.del(keys)\n    }\n  }\n\n  return {\n    set,\n    get,\n    has,\n    delete: del,\n    clear\n  }\n}\n\nexport const initCacheClient = async () => {\n  let cacheClient: CacheClient | null = null\n  try {\n    cacheClient = await getRedisClient()\n    console.info('[cache]', 'Redis store readied!')\n  } catch (error) {\n    cacheClient = getLRUClient()\n    console.info('[cache]', 'LRU store readied!')\n  }\n  await cacheClient.clear()\n  return cacheClient\n}\n","/**\n * @file BFF Server main\n * @module server.index\n * @author Surmon <https://github.com/surmon-china>\n */\n\nimport http from 'http'\nimport express from 'express'\nimport compression from 'compression'\nimport cookieParser from 'cookie-parser'\nimport { PROXY_ROUTE_PATH, proxyer } from './proxy'\nimport { initCacheClient } from './cache'\n\nexport const createExpressApp = async () => {\n  // init cache client\n  const cache = await initCacheClient()\n\n  // init app\n  const app = express()\n  const server = http.createServer(app)\n\n  // app proxy\n  app.use(PROXY_ROUTE_PATH, proxyer())\n\n  // app middlewares\n  app.use(express.json())\n  app.use(cookieParser())\n  app.use(compression())\n\n  return {\n    app,\n    server,\n    cache\n  }\n}\n","/**\n * @file BFF server entry\n * @module BFF-server\n * @author Surmon <https://github.com/surmon-china>\n */\n\nimport express from 'express'\nimport { NODE_ENV, isDev } from '@/environment'\nimport { TunnelModule } from '@/constants/tunnel'\nimport { BFF_TUNNEL_PREFIX, getBFFServerPort } from '@/config/bff.config'\nimport { getRSSXML } from './server/getters/rss'\nimport { getSitemapXML } from './server/getters/sitemap'\nimport { getGTagScript } from './server/getters/gtag'\nimport { getAllWallpapers } from './server/getters/wallpaper'\nimport { getMyGoogleMap } from './server/getters/my-google-map'\nimport { getGitHubSponsors, getGitHubContributions } from './server/getters/github'\nimport {\n  getTwitterTweets,\n  getTwitterUserinfo,\n  getTwitterCalendar,\n  initTwitterCalendar\n} from './server/getters/twitter'\nimport {\n  getInstagramMedias,\n  getInstagramCalendar,\n  initInstagramCalendar\n} from './server/getters/instagram'\nimport {\n  getYouTubeChannelPlayLists,\n  getYouTubeVideoListByPlayerlistID\n} from './server/getters/youtube'\nimport { getGitHubStatistic, getNPMStatistic } from './server/getters/open-srouce'\nimport { getOpenSeaAssets, getOpenSeaCollections } from './server/getters/opensea'\nimport { getDoubanMovies } from './server/getters/douban'\nimport { getSongList } from './server/getters/netease-music'\nimport { enableDevRenderer } from './server/renderer/dev'\nimport { enableProdRenderer } from './server/renderer/prod'\nimport { PUBLIC_PATH } from './server/helpers/configurer'\nimport { responsor, erroror } from './server/helpers/responsor'\nimport { cacher } from './server/helpers/cacher'\nimport { createExpressApp } from './server'\n\n// @ts-expect-error\nprocess.noDeprecation = true\n\n// app\ncreateExpressApp().then(({ app, server, cache }) => {\n  // static\n  app.use(express.static(PUBLIC_PATH))\n  // init thirds task\n  initTwitterCalendar()\n  initInstagramCalendar()\n\n  // sitemap\n  app.get('/sitemap.xml', async (_, response) => {\n    try {\n      const data = await cacher({\n        cache,\n        key: 'sitemap',\n        age: 60 * 60 * 1, // 1 hours\n        getter: getSitemapXML\n      })\n      response.header('Content-Type', 'application/xml')\n      response.send(data)\n    } catch (error) {\n      erroror(response, error)\n    }\n  })\n\n  // RSS\n  app.get('/rss.xml', async (_, response) => {\n    try {\n      const data = await cacher({\n        cache,\n        key: 'rss',\n        age: 60 * 60 * 1, // 1 hours\n        getter: getRSSXML\n      })\n      response.header('Content-Type', 'application/xml')\n      response.send(data)\n    } catch (error) {\n      erroror(response, error)\n    }\n  })\n\n  // gtag\n  app.get('/effects/gtag', async (_, response) => {\n    try {\n      const data = await cacher({\n        cache,\n        key: 'gtag',\n        age: 60 * 60 * 24, // 24 hours\n        retryWhen: 60 * 60 * 1, // 1 hours\n        getter: getGTagScript\n      })\n      response.header('Content-Type', 'text/javascript')\n      response.send(data)\n    } catch (error) {\n      erroror(response, error)\n    }\n  })\n\n  // Bing wallpapers\n  app.get(\n    `${BFF_TUNNEL_PREFIX}/${TunnelModule.BingWallpaper}`,\n    responsor(() => {\n      return cacher({\n        cache,\n        key: TunnelModule.BingWallpaper,\n        age: 60 * 60 * 6, // 6 hours\n        retryWhen: 60 * 30, // 30 minutes\n        getter: getAllWallpapers\n      })\n    })\n  )\n\n  // My GoogleMap\n  app.get(\n    `${BFF_TUNNEL_PREFIX}/${TunnelModule.MyGoogleMap}`,\n    responsor(() => {\n      return cacher({\n        cache,\n        key: TunnelModule.MyGoogleMap,\n        age: 60 * 60 * 6, // 6 hours\n        retryWhen: 60 * 30, // 30 minutes\n        getter: getMyGoogleMap\n      })\n    })\n  )\n\n  // GitHub sponsors\n  app.get(\n    `${BFF_TUNNEL_PREFIX}/${TunnelModule.GitHubSponsors}`,\n    responsor(() => {\n      return cacher({\n        cache,\n        key: TunnelModule.GitHubSponsors,\n        age: 60 * 60 * 18, // 18 hours\n        retryWhen: 60 * 10, // 10 minutes\n        getter: getGitHubSponsors\n      })\n    })\n  )\n\n  // GitHub contributions\n  app.get(\n    `${BFF_TUNNEL_PREFIX}/${TunnelModule.GitHubContributions}`,\n    responsor(() => {\n      return cacher({\n        cache,\n        key: TunnelModule.GitHubContributions,\n        age: 60 * 60 * 12, // 12 hours\n        retryWhen: 60 * 10, // 10 minutes\n        getter: () => {\n          const now = new Date()\n          const end = now.toISOString()\n          now.setFullYear(now.getFullYear() - 1)\n          const start = now.toISOString()\n          return getGitHubContributions(start, end)\n        }\n      })\n    })\n  )\n\n  // open-source\n  app.get(\n    `${BFF_TUNNEL_PREFIX}/${TunnelModule.OpenSourceGitHubStatistic}`,\n    responsor(() => {\n      return cacher({\n        cache,\n        key: TunnelModule.OpenSourceGitHubStatistic,\n        age: 60 * 60 * 8, // 8 hours\n        retryWhen: 60 * 10, // 10 minutes\n        getter: getGitHubStatistic\n      })\n    })\n  )\n\n  app.get(\n    `${BFF_TUNNEL_PREFIX}/${TunnelModule.OpenSourceNPMStatistic}`,\n    responsor(() => {\n      return cacher({\n        cache,\n        key: TunnelModule.OpenSourceNPMStatistic,\n        age: 60 * 60 * 8, // 8 hours\n        retryWhen: 60 * 10, // 10 minutes\n        getter: getNPMStatistic\n      })\n    })\n  )\n\n  // 163 music BGM list\n  app.get(\n    `${BFF_TUNNEL_PREFIX}/${TunnelModule.NetEaseMusic}`,\n    responsor(() => {\n      return cacher({\n        cache,\n        key: TunnelModule.NetEaseMusic,\n        age: 60 * 60 * 12, // 12 hours\n        retryWhen: 60 * 10, // 10 minutes\n        getter: getSongList\n      })\n    })\n  )\n\n  // Douban movies\n  app.get(\n    `${BFF_TUNNEL_PREFIX}/${TunnelModule.DoubanMovies}`,\n    responsor(() => {\n      return cacher({\n        cache,\n        key: TunnelModule.DoubanMovies,\n        age: 60 * 60 * 32, // 32 hours\n        retryWhen: 60 * 10, // 10 minutes\n        getter: getDoubanMovies\n      })\n    })\n  )\n\n  // Twitter userinfo\n  app.get(\n    `${BFF_TUNNEL_PREFIX}/${TunnelModule.TwitterUserInfo}`,\n    responsor(() => {\n      return cacher({\n        cache,\n        key: TunnelModule.TwitterUserInfo,\n        age: 60 * 60 * 12, // 12 hours\n        retryWhen: 60 * 10, // 10 minutes\n        getter: getTwitterUserinfo\n      })\n    })\n  )\n\n  // Twitter newest tweets\n  app.get(\n    `${BFF_TUNNEL_PREFIX}/${TunnelModule.TwitterTweets}`,\n    responsor(() => {\n      return cacher({\n        cache,\n        key: TunnelModule.TwitterTweets,\n        age: 60 * 60 * 1, // 1 hours\n        retryWhen: 60 * 10, // 10 minutes\n        getter: getTwitterTweets\n      })\n    })\n  )\n\n  // Twitter tweets calendar\n  app.get(\n    `${BFF_TUNNEL_PREFIX}/${TunnelModule.TwitterCalendar}`,\n    responsor(() => getTwitterCalendar())\n  )\n\n  // Instagram newest medias\n  app.get(\n    `${BFF_TUNNEL_PREFIX}/${TunnelModule.InstagramMedias}`,\n    responsor(() => {\n      return cacher({\n        cache,\n        key: TunnelModule.InstagramMedias,\n        age: 60 * 60 * 2, // 2 hours\n        retryWhen: 60 * 10, // 10 minutes\n        getter: getInstagramMedias\n      })\n    })\n  )\n\n  // Instagram calendar\n  app.get(\n    `${BFF_TUNNEL_PREFIX}/${TunnelModule.InstagramCalendar}`,\n    responsor(() => getInstagramCalendar())\n  )\n\n  // YouTube platlists\n  app.get(\n    `${BFF_TUNNEL_PREFIX}/${TunnelModule.YouTubePlaylist}`,\n    responsor(() => {\n      return cacher({\n        cache,\n        key: TunnelModule.YouTubePlaylist,\n        age: 60 * 60 * 24, // 24 hours\n        retryWhen: 60 * 10, // 10 minutes\n        getter: getYouTubeChannelPlayLists\n      })\n    })\n  )\n\n  // YouTube videos\n  app.get(`${BFF_TUNNEL_PREFIX}/${TunnelModule.YouTubeVideoList}`, (request, response, next) => {\n    const playlistID = request.query.id\n    if (!playlistID || typeof playlistID !== 'string') {\n      return erroror(response, 'Invalid params')\n    }\n    responsor(() => {\n      return cacher({\n        cache,\n        key: `youtube_playlist_${playlistID}`,\n        age: 60 * 60 * 1, // 1 hours\n        retryWhen: 60 * 10, // 10 minutes\n        getter: () => getYouTubeVideoListByPlayerlistID(playlistID)\n      })\n    })(request, response, next)\n  })\n\n  // OpenSea assets\n  app.get(\n    `${BFF_TUNNEL_PREFIX}/${TunnelModule.OpenSeaAssets}`,\n    responsor(() => {\n      return cacher({\n        cache,\n        key: TunnelModule.OpenSeaAssets,\n        age: 60 * 60 * 1, // 1 hours\n        retryWhen: 60 * 10, // 10 minutes\n        getter: getOpenSeaAssets\n      })\n    })\n  )\n\n  // OpenSea collections\n  app.get(\n    `${BFF_TUNNEL_PREFIX}/${TunnelModule.OpenSeaCollections}`,\n    responsor(() => {\n      return cacher({\n        cache,\n        key: TunnelModule.OpenSeaCollections,\n        age: 60 * 60 * 0.5, // 30 minutes\n        retryWhen: 60 * 5, // 5 minutes\n        getter: getOpenSeaCollections\n      })\n    })\n  )\n\n  // vue renderer\n  isDev ? enableDevRenderer(app, cache) : enableProdRenderer(app, cache)\n\n  // run\n  server.listen(getBFFServerPort(), () => {\n    const infos = [\n      `in ${NODE_ENV}`,\n      `at ${new Date().toLocaleString()}`,\n      `listening on ${JSON.stringify(server.address())}`\n    ]\n    console.info('[surmon.me]', `Run! ${infos.join(', ')}.`)\n  })\n})\n"],"names":["path","axios","RSS","SitemapStream","EnumChangefreq","streamToPromise","Readable","WonderfulBingWallpaper","XMLParser","argv","calendarTemp","createServer","fs","createProxyServer","LRU","createClient","express","http","cookieParser","compression"],"mappings":"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"}